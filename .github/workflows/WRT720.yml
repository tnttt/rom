#=================================================
# https://github.com/Live-ID/OpenWrt-Actions
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: Tony
# Blog: https://bit.do/TonyLee
#=================================================

#name: OpenWrt WR703N OpenVPN SSR
#name: OpenWrt WR703N OpenVPN SSR
#name: OpenWrt WR703N OpenVPN SSR
#name: OpenWrt WR720N OpenVPN SSR
#name: OpenWrt WR720N SSR troja
#name: OpenWRT for N1
#name: OpenWRT for WR941N_v4
name: OpenWRT for WR720N_v4_16M_mini_10.30

on: 
  release:
    types: [published]
  push:
    branches: 
      - master
    paths:
      - 'configs/.config'
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: [started]
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo "Deleting files, please wait ..."
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d/*
        ##sudo swapoff /swapfile
        sudo rm -f /swapfile
        #docker rmi `docker images -q`
        #sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        ##curl -fsSL https://raw.githubusercontent.com/ccsfedu/dotfiles/master/.bashrc >> ~/.bashrc
        sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
    - name: Clone source code 复制仓库的源代码
      env: 
       ## REPO_URL: https://github.com/coolsnowwolf/lede
       ## REPO_URL: https://github.com/openwrt/openwrt
       ## REPO_URL: https://github.com/openwrt/openwrt
       ## REPO_URL: https://github.com/a520ass/openwrt
       #  REPO_URL: https://github.com/coolsnowwolf/lede
       #  REPO_BRANCH: master
         REPO_URL: https://github.com/coolsnowwolf/lede
         REPO_BRANCH: master
         #FEEDS_CONF: feeds.conf.default
         #CONFIG_FILE: .config
         #DIY_P1_SH: diy-part1.sh
         #DIY_P2_SH: diy-part2.sh
         #SSH_ACTIONS: false
         UPLOAD_BIN_DIR: true
         UPLOAD_FIRMWARE: true
         UPLOAD_COWTRANSFER: true
         UPLOAD_WETRANSFER: true
         #UPLOAD_WETRANSFER: false
         #TZ: Asia/Shanghai  
         
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Update feeds 更新源
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds 安装源
      run: cd openwrt && ./scripts/feeds install -a

    - name: Custom 个性化设置一些文件
      run: |
          cd openwrt
          ## sed -i 's/被替换的内容/要替换成的内容/' package/lean/default-settings/files/zzz-default-setting
          sed -i '/tl-wr720n-v3/{n;s/tplink-8mlzma/tplink-16mlzma/;}'  target\/linux\/ar71xx\/image\/tiny-tp-link.mk        
          sed -i 's/R20.10.20/Plus by Tony 2020/'  package\/lean\/default-settings\/files\/zzz-default-settings
          #sed -i 's/pcdata(ver.luciname)/"SuperRouter"/' feeds\/luci\/modules\/luci-mod-admin-full\/luasrc\/view\/admin_status\/index.htm
          #sed -i 's/pcdata(ver.luciname)/"科學上網路由器"/' feeds\/luci\/modules\/luci-mod-admin-full\/luasrc\/view\/admin_status\/index.htm
          sed -i 's/192.168.1.1/192.168.2.1/' package\/base-files\/files\/bin\/config_generate
          sed -i 's/pcdata(ver.luciname)/"SuperRouter"/' feeds\/luci\/modules\/luci-mod-admin-full\/luasrc\/view\/admin_status\/index.htm
          sed -i 's/pcdata(ver.luciversion)/"2020-10-28"/' feeds\/luci\/modules\/luci-mod-admin-full\/luasrc\/view\/admin_status\/index.htm
          sed -i 's/OpenWrt/WR720N/' package\/base-files\/files\/bin\/config_generate
          sed -i 's/.ssid=OpenWrt/.ssid=WR720N-WiFi/' package\/kernel\/mac80211\/files\/lib\/wifi\/mac80211.sh
          sed -i 's/.encryption=none/.encryption=psk2\n	    		set wireless.default_radio\${devidx}.key=password\n/' package\/kernel\/mac80211\/files\/lib\/wifi\/mac80211.sh
      
    - name: Custom Applications 增加应用软件
      run: |
          cd openwrt/package
          git clone https://github.com/fw876/helloworld.git
          git clone https://github.com/Baozisoftware/luci-app-koolproxy
          git clone https://github.com/vernesong/OpenClash.git
          git clone https://github.com/destan19/OpenAppFilter.git
          git clone https://github.com/tty228/luci-app-serverchan.git
          git clone https://github.com/BoringCat/luci-app-mentohust.git
          #git clone https://github.com/ilya-fedin/pihole-openwrt.git
          
    - name: Load custom configuration 加载自定义编译配置文件
      env:
        CONFIG_FILE: '.config'
       # CONFIG_FILE: 'OpenWRT-N1.config'  
       # CONFIG_FILE: '.config'  
       # CONFIG_FILE: 'OpenWRT_WR941N_v4_1.config' 
       # CONFIG_FILE: 'configs/OpenWRT_WR720N_v4_16M.config' 
       ## CONFIG_FILE: 'configs/OpenWRT_WR720N_v4_16MB.config'   
        DIY_SH: 'configs/diy.sh'
      run: |
        #[ -e files ] && mv files openwrt/files
        
        #cp -f uboot/breed-for-wr710n_wr720n.bin openwrt/files/etc/uboot.bin
        #cp -f lucifiles/feeds/luci/modules/luci-mod-admin-full/luasrc/controller/admin/{system.lua,tony.lua} openwrt/feeds/luci/modules/luci-mod-admin-full/luasrc/controller/admin/
        #cp -f lucifiles/feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_system/{flashops.htm,reboot.htm} openwrt/feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_system/
        #cp -f -r lucifiles/feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_tony_view/  openwrt/feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_tony_view/
        #cp -f -r lucifiles/feeds/luci/modules/luci-mod-admin-full/luasrc/model/cbi/admin_tony/  openwrt/feeds/luci/modules/luci-mod-admin-full/luasrc/model/cbi/admin_tony/
        #cp -f lucifiles/feeds/luci/themes/luci-theme-bootstrap/luasrc/view/themes/bootstrap/{footer.htm,header.htm}  openwrt/feeds/luci/themes/luci-theme-bootstrap/luasrc/view/themes/bootstrap/
        #cp -f lucifiles/package/lean/luci-app-ssr-plus/luasrc/view/shadowsocksr/{ssrurl.htm,status.htm,refresh.htm,check.htm}  openwrt/package/helloworld/luci-app-ssr-plus/luasrc/view/shadowsocksr/
        ##cp -f lucifiles/package/lean/luci-app-ssr-plus/luasrc/view/shadowsocksr/{ssrurl.htm,status.htm,refresh.htm,check.htm}  openwrt/package/lean/luci-app-ssr-plus/luasrc/view/shadowsocksr/
        ##cp -f lucifiles/package/lean/luci-app-ssr-plus/luasrc/view/shadowsocksr/{ssrurl.htm,status.htm,refresh.htm,check.htm}  openwrt/package/lean/luci-app-ssr-plus/luasrc/view/shadowsocksr/
        #cp -f lucifiles/target/linux/ar71xx/files/drivers/mtd/tplinkpart.c  openwrt/target/linux/ar71xx/files/drivers/mtd/tplinkpart.c
        #cp -f lucifiles/feeds/luci/modules/luci-base/luasrc/model/firewall.lua  openwrt/feeds/luci/modules/luci-base/luasrc/model/firewall.lua
        sed -i 's/ShadowSocksR Plus+/SS-SSR-Trojan/'  openwrt\/package\/helloworld\/luci-app-ssr-plus\/luasrc\/controller\/shadowsocksr.lua
        ##sed -i 's/ShadowSocksR Plus+/SS-SSR-Trojan/'  openwrt\/package\/lean\/luci-app-ssr-plus\/luasrc\/controller\/shadowsocksr.lua
        
        rm -rf openwrt/files/etc/wireless
        rm -f openwrt/feeds/luci/modules/luci-mod-admin-full/luasrc/controller/admin/tony.lua
        rm -f openwrt/feeds/luci/modules/luci-mod-admin-full/luasrc/model/cbi/admin_system/leds.lua
        rm -f openwrt/feeds/luci/modules/luci-mod-admin-full/luasrc/model/cbi/admin_system/ipkg.lua
        rm -f openwrt/feeds/luci/modules/luci-mod-admin-full/luasrc/model/cbi/admin_system/crontab.lua
        rm -f openwrt/feeds/luci/modules/luci-mod-admin-full/luasrc/model/cbi/admin_system/startup.lua
        rm -f openwrt/feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_status/dmesg.htm
        rm -f openwrt/feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_status/syslog.htm
        #rm -f openwrt/feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_status/dmesg.htm
        
        
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH
        make defconfig
        
      ##cp -f lucifiles/target/linux/ar71xx/image/{tiny-tp-link.mk,generic-tp-link.mk}  openwrt/target/linux/ar71xx/image/
      ##cp -f lucifiles/package/lean/luci-theme-argon/htdocs/luci-static/argon/{tony.gif,logo.png,favicon.ico}  openwrt/package/lean/luci-theme-argon/htdocs/luci-static/argon/
  
      #  cp -f uboot/wr703n-uboot.bin openwrt/files/etc/uboot.bin
      #  cp -f uboot/wr941v1v2v3v4v5-uboot.bin openwrt/files/etc/uboot.bin
      #  cp -f uboot/wr941v1v2v3v4v5-uboot.bin openwrt/files/etc/uboot.bin
      #  cp -f uboot/wr941v1v2v3v4v5-uboot.bin openwrt/files/etc/uboot.bin

#===================================================================
    #- name: SSH connection to Actions 用SSH连接到终端控制台
    #  uses: Tony268/debugger-action@master
#===================================================================
    - name: Start SSH via tmate
      uses: P3TERX/ssh2actions@main
      # Send connection info to Telegram (optional)
      # You can find related documents here: https://core.telegram.org/bots
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
#===================================================================
    #- name: Start SSH via tmate
    #  uses: wrtpi/ssh2githubactions@main
    #  # Send connection info to Telegram (optional)
    #  # You can find related documents here: https://core.telegram.org/bots
    #  env:
    #    TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
    #    TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
#===================================================================  

    - name: Download package 下载软件包
      run: |
        cd openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Multi-thread compile 多线程编译
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc)
    - name: Single-thread compile 单线程编译
      if: failure()
      run: |
        cd openwrt
        make -j1 V=s
    - name: Upload bin directory 上传固件相关软件包
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: WR720N_packages16M_mini
        path: openwrt/bin

    - name: Upload .config file 组织要上传.config配置文件
      run: |
           mkdir -p openwrt/artifact
           cp openwrt/.config openwrt/artifact/OpenWRT_WR720N_v4_16MB_new_mini.config
           
    - name: Upload .config file 上传编译配置文件
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: WR720N_config16M_mini
        path: openwrt/artifact

    - name: Organize files 组织要上传的文件
      if: always()
      run: |  
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$(pwd)"
    
    - name: Upload firmware 上传固件文件
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: WR720N_firmware16M_mini
        path: ${{ env.FIRMWARE }}
